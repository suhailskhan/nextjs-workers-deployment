import { render, screen } from "@testing-library/react";
import "@testing-library/jest-dom";
import RootLayout, { metadata } from "../src/app/layout";

// Mock Next.js font imports
jest.mock("next/font/google", () => ({
  Geist: () => ({
    variable: "--font-geist-sans",
  }),
  Geist_Mono: () => ({
    variable: "--font-geist-mono",
  }),
}));

describe("RootLayout", () => {
  it("renders children properly", () => {
    render(
      <RootLayout>
        <div data-testid="test-child">Test Content</div>
      </RootLayout>,
    );

    const testChild = screen.getByTestId("test-child");
    expect(testChild).toBeInTheDocument();
    expect(testChild).toHaveTextContent("Test Content");
  });

  it("has proper HTML structure", () => {
    render(
      <RootLayout>
        <div>Test Content</div>
      </RootLayout>,
    );

    const html = document.documentElement;
    expect(html).toHaveAttribute("lang", "en");

    const body = document.body;
    expect(body).toHaveClass("antialiased");
  });

  it("includes font variables in body class", () => {
    render(
      <RootLayout>
        <div>Test Content</div>
      </RootLayout>,
    );

    const body = document.body;
    expect(body.className).toContain("--font-geist-sans");
    expect(body.className).toContain("--font-geist-mono");
  });
});

describe("Metadata", () => {
  it("has correct title and description", () => {
    expect(metadata.title).toBe("Create Next App");
    expect(metadata.description).toBe("Generated by create next app");
  });
});
